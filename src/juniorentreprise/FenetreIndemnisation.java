/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juniorentreprise;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Arthur
 */
public class FenetreIndemnisation extends javax.swing.JFrame {

    /**
     * Creates new form FenetreIndemnisation
     */
    public FenetreIndemnisation() {
        initComponents();
        //Remplissage des combobox avec les valeurs de la BDD
        Connection con = null;
        Statement stmt = null;
        ResultSet resultat = null;
        try {
            //Ouverture de la connexion, initialisation d'un Statement, initialisation d'un ResultSet, etc.
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://iutdoua-web.univ-lyon1.fr:3306/p1702775", "p1702775", "296054");
            stmt=(Statement)con.createStatement();
            String request = "SELECT NomEtudiant, Prenom FROM Etudiant";
            
            /* Exécution d'une requête de lecture */
            resultat =  stmt.executeQuery(request);//query pour des requetes SELECT
            
            //String[] nomsEtudiants = (String[]) resultat.getArray("nomEtudiant").getArray(); NOT SUPORTED
            //will have to go through row by row, assign the value like in dashboad and add to an array of Strings
            //Iterator itrNomsEtu = nomsEtudiants.iterator();
            resultat.first();
            DefaultComboBoxModel modCbbEtu = new DefaultComboBoxModel();
            while(!resultat.isAfterLast()){
                modCbbEtu.addElement(resultat.getString("NomEtudiant").toUpperCase() +" "+ resultat.getString("Prenom"));
                resultat.next();
            }
            cbbEtu.setModel(modCbbEtu);
            /* Traiter ici les valeurs récupérées. */
        } catch ( ClassNotFoundException | SQLException e ) {
            JOptionPane.showMessageDialog(null, e.getMessage() ,"Georges", 1);
        } finally {
            if ( resultat != null ) {
                try {
                    /* On commence par fermer le ResultSet */
                    resultat.close();
                } catch ( SQLException ignore ) {
                    JOptionPane.showMessageDialog(null, ignore.getMessage() ,"Error", 1);
                }
            }
            if ( stmt != null ) {
                try {
                    /* Puis on ferme le Statement */
                    stmt.close();
                } catch ( SQLException ignore ) {
                    JOptionPane.showMessageDialog(null, ignore.getMessage() ,"Error", 1);
                }
            }
            if ( con != null ) {
                try {
                    /* Et enfin on ferme la connexion */
                    con.close();
                } catch ( SQLException ignore ) {
                    JOptionPane.showMessageDialog(null, ignore.getMessage() ,"Error", 1);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoJE = new javax.swing.JLabel();
        pnlVersements = new javax.swing.JPanel();
        lbl_frais_dep = new javax.swing.JLabel();
        tf_frais_depl = new javax.swing.JTextField();
        lbl_frais_fonct = new javax.swing.JLabel();
        tf_frais_fonct = new javax.swing.JTextField();
        lbl_salaire = new javax.swing.JLabel();
        tf_salaire = new javax.swing.JTextField();
        lbl_divers = new javax.swing.JLabel();
        tf_frais_divers = new javax.swing.JTextField();
        bt_calc_total_indemn = new javax.swing.JButton();
        tf_frais_totaux = new javax.swing.JTextField();
        tf_frais_totaux.setEditable(false);
        bt_indemn = new javax.swing.JButton();
        bt_vider_indemn = new javax.swing.JButton();
        pnlIndemn = new javax.swing.JPanel();
        lbl_num_proj_indemn = new javax.swing.JLabel();
        tf_num_proj_indemn = new javax.swing.JTextField();
        lbl_nom_etu_indemn = new javax.swing.JLabel();
        cbbEtu = new javax.swing.JComboBox<>();
        lbl_code_indemn = new javax.swing.JLabel();
        tf_code_indemn = new javax.swing.JTextField();
        lbl_date_indemn = new javax.swing.JLabel();
        tf_date_indemn = new org.jdesktop.swingx.JXDatePicker();
        lbl_date_edition = new javax.swing.JLabel();
        tf_date_edition = new org.jdesktop.swingx.JXDatePicker();
        sepHautDePage = new javax.swing.JSeparator();
        lblTitre = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion Indemnisation");

        logoJE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/JE_logo.png"))); // NOI18N

        pnlVersements.setBackground(new java.awt.Color(204, 255, 204));
        pnlVersements.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Versements", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 14))); // NOI18N
        pnlVersements.setLayout(new java.awt.GridLayout(7, 2, 10, 20));

        lbl_frais_dep.setText("Frais déplacements");
        pnlVersements.add(lbl_frais_dep);

        tf_frais_depl.setText("0");
        pnlVersements.add(tf_frais_depl);

        lbl_frais_fonct.setText("Frais fonctionnement");
        pnlVersements.add(lbl_frais_fonct);

        tf_frais_fonct.setText("0");
        pnlVersements.add(tf_frais_fonct);

        lbl_salaire.setText("Salaire");
        pnlVersements.add(lbl_salaire);

        tf_salaire.setText("0");
        pnlVersements.add(tf_salaire);

        lbl_divers.setText("Divers");
        pnlVersements.add(lbl_divers);

        tf_frais_divers.setText("0");
        pnlVersements.add(tf_frais_divers);

        bt_calc_total_indemn.setText("Calculer total");
        bt_calc_total_indemn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_calc_total_indemnActionPerformed(evt);
            }
        });
        pnlVersements.add(bt_calc_total_indemn);

        tf_frais_totaux.setText("0");
        pnlVersements.add(tf_frais_totaux);

        bt_indemn.setText("Indemniser");
        bt_indemn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_indemnActionPerformed(evt);
            }
        });
        pnlVersements.add(bt_indemn);

        bt_vider_indemn.setText("Annuler");
        bt_vider_indemn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_vider_indemnActionPerformed(evt);
            }
        });
        pnlVersements.add(bt_vider_indemn);

        pnlIndemn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informations", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        pnlIndemn.setLayout(new java.awt.GridLayout(5, 2, 10, 20));

        lbl_num_proj_indemn.setText("N° projet");
        pnlIndemn.add(lbl_num_proj_indemn);

        tf_num_proj_indemn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_num_proj_indemnActionPerformed(evt);
            }
        });
        pnlIndemn.add(tf_num_proj_indemn);

        lbl_nom_etu_indemn.setText("Nom etudiant");
        pnlIndemn.add(lbl_nom_etu_indemn);

        cbbEtu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbEtuActionPerformed(evt);
            }
        });
        pnlIndemn.add(cbbEtu);

        lbl_code_indemn.setText("Code paiement");
        pnlIndemn.add(lbl_code_indemn);
        pnlIndemn.add(tf_code_indemn);

        lbl_date_indemn.setText("Date paiement");
        pnlIndemn.add(lbl_date_indemn);
        pnlIndemn.add(tf_date_indemn);

        lbl_date_edition.setText("Date édition");
        pnlIndemn.add(lbl_date_edition);
        pnlIndemn.add(tf_date_edition);

        lblTitre.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitre.setText("Gestion des Indemnisations");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(pnlIndemn, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlVersements, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoJE, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitre)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sepHautDePage))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logoJE, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlIndemn, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sepHautDePage, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlVersements, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt_indemnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_indemnActionPerformed
        
        if(tf_date_indemn.getDate()== null || tf_date_edition.getDate()== null || tf_num_proj_indemn.getText().equals("")|| cbbEtu.getSelectedItem() == null|| tf_code_indemn.getText().equals(""))
            JOptionPane.showMessageDialog(rootPane, "Toutes les informations ne sont pas remplies", "Erreur : saisie erronée", JOptionPane.ERROR_MESSAGE);
        else{
            double total = Double.parseDouble(tf_frais_totaux.getText());
            System.out.println("total = "+total);
            if(total<=0){
                JOptionPane.showMessageDialog(rootPane, "Le total de l'indemnisation ne peut pas être négatif ou nul", "Erreur : saisie erronée", JOptionPane.ERROR_MESSAGE);
            }
            else{
            //creation du document dans un emplacement choisi par l'utilisateur
                final JFileChooser fcSauvegardeIndemnisation = new JFileChooser();
                fcSauvegardeIndemnisation.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                fcSauvegardeIndemnisation.setDialogTitle("Sauvegarder le document d'indemnisation");
                String emplacementSauvegarde = (fcSauvegardeIndemnisation.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) ? fcSauvegardeIndemnisation.getSelectedFile().toString() : null ;
                Document docIndemnisation = new Document();
                try {
                    try 
                    {
                        if(emplacementSauvegarde != null){
                            String fileName = "Indemnisation"+tf_code_indemn.getText().trim()+".pdf";
                            PdfWriter.getInstance(docIndemnisation, new FileOutputStream(new File(emplacementSauvegarde, fileName)));
                            JOptionPane.showMessageDialog(this, "Votre fichier d'indemnisation à été sauvegardée dans le dossier\n"+emplacementSauvegarde, "Sauvegarde réussie ! ", JOptionPane.INFORMATION_MESSAGE);
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "Aucun dossier sélectionné", "Erreur : Manque d'informations", JOptionPane.ERROR_MESSAGE);
                        }
                    } 
                    catch (DocumentException ex)
                    {     
                        System.err.println("Erreur sauvegarde");
                        System.err.println(ex.getMessage());
                    }
                } catch (FileNotFoundException ex) {
                    System.err.println("Erreur fichier non trouvé");
                    System.err.println(ex.getMessage());
                }

                //edition du contenu du document
                docIndemnisation.open();
                //création d'une table pour gérer les positions sur la page
                PdfPTable tableDisplay = new PdfPTable(3);
                tableDisplay.setWidthPercentage(100);
                //ligne vide de référence
                PdfPCell cellLargeurTrois = getCell(" ", PdfPCell.ALIGN_CENTER);
                cellLargeurTrois.setColspan(3);
                cellLargeurTrois.setMinimumHeight(20f);
                //1ère ligne
                tableDisplay.addCell(getCell(tf_date_edition.getDate().toString(), PdfPCell.ALIGN_LEFT));
                tableDisplay.addCell(getCell("", PdfPCell.ALIGN_CENTER));
                tableDisplay.addCell(getCell("", PdfPCell.ALIGN_RIGHT));
                //quelqeues lignes vides
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                //deuxième ligne
                tableDisplay.addCell(getCell("", PdfPCell.ALIGN_LEFT));
                tableDisplay.addCell(getCell("Indemnisation de l'étudiant "+cbbEtu.getSelectedItem().toString().trim(), PdfPCell.ALIGN_JUSTIFIED));
                tableDisplay.addCell(getCell("", PdfPCell.ALIGN_RIGHT));
                //quelques lignes (vides)
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);


                PdfPCell cellCorps = getCell("Indemnisation n°"+tf_code_indemn.getText().trim()+" éditée le "+tf_date_edition.getDate()+".\n\nJe soussigné "+cbbEtu.getSelectedItem().toString().trim()+" déclare avoir perçu la somme de "+tf_frais_totaux.getText().trim()+"€ le "+tf_date_indemn.getDate()+"dans le cadre du projet \""
                        +tf_num_proj_indemn.getText().trim()+"\"." , PdfPCell.ALIGN_JUSTIFIED);
                cellCorps.setColspan(3);
                cellCorps.setNoWrap(false);
                tableDisplay.addCell(cellCorps);
                //quelques lignes (vides)
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                tableDisplay.addCell(cellLargeurTrois);
                //ligne de signatures
                tableDisplay.addCell(getCell("Signature de l'étudiant "+cbbEtu.getSelectedItem().toString(), PdfPCell.ALIGN_LEFT));
                tableDisplay.addCell(getCell("", PdfPCell.ALIGN_CENTER));
                tableDisplay.addCell(getCell("", PdfPCell.ALIGN_RIGHT));

                try {
                    docIndemnisation.add(tableDisplay);
                } catch (DocumentException ex) {
                    System.err.println("Erreur add(tableDisplay)");
                    System.err.println(ex.getMessage());
                }
                docIndemnisation.close();

            }
        }
    }//GEN-LAST:event_bt_indemnActionPerformed

    private void tf_num_proj_indemnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_num_proj_indemnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_num_proj_indemnActionPerformed

    // Réinitialise les champs
    private void bt_vider_indemnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_vider_indemnActionPerformed
        tf_frais_depl.setText("0");
        tf_frais_fonct.setText("0");
        tf_salaire.setText("0");
        tf_frais_divers.setText("0");
        tf_frais_totaux.setText("0");
        tf_num_proj_indemn.setText("");
        cbbEtu.setSelectedItem(null);
        tf_code_indemn.setText("");
        tf_date_indemn.setDate(null);
    }//GEN-LAST:event_bt_vider_indemnActionPerformed

    private void bt_calc_total_indemnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_calc_total_indemnActionPerformed
        double v1, v2, v3, v4;
        
        if(!tf_frais_depl.getText().matches("[0-9]+$") || !tf_salaire.getText().matches("[0-9]+$")){
            JOptionPane.showMessageDialog(rootPane, "Tous les champs ne doivent contenir que des nombres", "Erreur : saisie erronée", JOptionPane.ERROR_MESSAGE);
        }
        else{
            v1 = Double.valueOf(tf_frais_depl.getText()); 
            v2 = Double.valueOf(tf_frais_fonct.getText());
            v3 = Double.valueOf(tf_salaire.getText());
            v4 = Double.valueOf(tf_frais_divers.getText());
            double s;
            s = v1+v2+v3+v4;
            tf_frais_totaux.setText(String.valueOf(s));
        }
    }//GEN-LAST:event_bt_calc_total_indemnActionPerformed

    private void cbbEtuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbEtuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbEtuActionPerformed

    public PdfPCell getCell(String text, int alignment) {
        Font font = FontFactory.getFont(FontFactory.TIMES, 16, BaseColor.BLACK);
        PdfPCell cell = new PdfPCell(new Phrase(text, font));
        cell.setPadding(0);
        cell.setHorizontalAlignment(alignment);
        cell.setBorder(PdfPCell.NO_BORDER);
        return cell;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetreIndemnisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetreIndemnisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetreIndemnisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetreIndemnisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetreIndemnisation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_calc_total_indemn;
    private javax.swing.JButton bt_indemn;
    private javax.swing.JButton bt_vider_indemn;
    private javax.swing.JComboBox<String> cbbEtu;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JLabel lbl_code_indemn;
    private javax.swing.JLabel lbl_date_edition;
    private javax.swing.JLabel lbl_date_indemn;
    private javax.swing.JLabel lbl_divers;
    private javax.swing.JLabel lbl_frais_dep;
    private javax.swing.JLabel lbl_frais_fonct;
    private javax.swing.JLabel lbl_nom_etu_indemn;
    private javax.swing.JLabel lbl_num_proj_indemn;
    private javax.swing.JLabel lbl_salaire;
    private javax.swing.JLabel logoJE;
    private javax.swing.JPanel pnlIndemn;
    private javax.swing.JPanel pnlVersements;
    private javax.swing.JSeparator sepHautDePage;
    private javax.swing.JTextField tf_code_indemn;
    private org.jdesktop.swingx.JXDatePicker tf_date_edition;
    private org.jdesktop.swingx.JXDatePicker tf_date_indemn;
    private javax.swing.JTextField tf_frais_depl;
    private javax.swing.JTextField tf_frais_divers;
    private javax.swing.JTextField tf_frais_fonct;
    private javax.swing.JTextField tf_frais_totaux;
    private javax.swing.JTextField tf_num_proj_indemn;
    private javax.swing.JTextField tf_salaire;
    // End of variables declaration//GEN-END:variables
}
